#loader contenttweaker
#modloaded tconstruct
import mods.contenttweaker.conarm.ExtendedMaterialBuilder;
import mods.contenttweaker.tconstruct.TraitBuilder;
import mods.ctutils.utils.Math;

val ingotEnderium = <item:contenttweaker:material_part:4>;
val ingotSignalum = <item:contenttweaker:material_part:7>;
val ingotRefined = <item:contenttweaker:material_part:10>;
val nuggetEnderium = <item:contenttweaker:material_part:5>;
val nuggetSignalum = <item:contenttweaker:material_part:8>;
val nuggetRefined = <item:contenttweaker:material_part:11>;

val traitAlchemical = TraitBuilder.create("alchemical");
traitAlchemical.afterHit =
  function (trait, tool, attacker, target, damageDealt, wasCritical, wasHit) {
    if (!wasHit) {return;}
    if (Math.random() <= 0.2 & attacker.health > 0) {attacker.addPotionEffect(<potion:minecraft:regeneration>.makePotionEffect(60, 1));}
    else if (Math.random() <= 0.4 & attacker.health > 0) {attacker.addPotionEffect(<potion:minecraft:speed>.makePotionEffect(60, 1));}
    else if (Math.random() <= 0.6 & attacker.health > 0) {attacker.addPotionEffect(<potion:minecraft:resistance>.makePotionEffect(60, 1));}
    else if (Math.random() <= 0.8 & attacker.health > 0) {attacker.addPotionEffect(<potion:minecraft:strength>.makePotionEffect(60, 1));}
    else if (Math.random() <= 1.0 & attacker.health > 0) {attacker.addPotionEffect(<potion:minecraft:luck>.makePotionEffect(60, 1));}
	};
traitAlchemical.register();

val ticoEthaxium = ExtendedMaterialBuilder.create("ethaxium");
  ticoEthaxium.setColor(0x969e8a);
  ticoEthaxium.setCraftable(false);
  ticoEthaxium.setLiquid(<liquid:ethaxium>);
  ticoEthaxium.setCastable(true);
  ticoEthaxium.addItem(<item:abyssalcraft:ethaxiumingot>);
  ticoEthaxium.addItem(<item:abyssalcraft:ethaxiumingot>, 1, 1296);
  ticoEthaxium.setRepresentativeItem(<item:abyssalcraft:ethaxiumingot>);
  ticoEthaxium.setItemLocalizer(function(thisMaterial, itemName){return "Ethaxium " + itemName;});
  ticoEthaxium.setLocalizedName("Ethaxium");
  ticoEthaxium.addHeadMaterialStats(1380, 16, 9, 7);
  ticoEthaxium.addHandleMaterialStats(0.9, 60);
  ticoEthaxium.addExtraMaterialStats(100);
  ticoEthaxium.addBowMaterialStats(0.79, 1.4, 4.5);
  ticoEthaxium.addProjectileMaterialStats();
  ticoEthaxium.addCoreMaterialStats(65, 40.5);
  ticoEthaxium.addPlatesMaterialStats(19.06, 11.2, 0);
  ticoEthaxium.addTrimMaterialStats(11.2);
  ticoEthaxium.addMaterialTrait("alien", "head");
  ticoEthaxium.addMaterialTrait("stalwart", "head");
  ticoEthaxium.addMaterialTrait("apocalypse", "head");
  ticoEthaxium.addMaterialTrait("alien", "handle");
  ticoEthaxium.addMaterialTrait("stalwart", "handle");
  ticoEthaxium.addMaterialTrait("apocalypse", "handle");
  ticoEthaxium.addMaterialTrait("alien", "extra");
  ticoEthaxium.addMaterialTrait("stalwart", "extra");
  ticoEthaxium.addMaterialTrait("apocalypse", "extra");
  ticoEthaxium.addMaterialTrait("alien", "bow");
  ticoEthaxium.addMaterialTrait("stalwart", "bow");
  ticoEthaxium.addMaterialTrait("apocalypse", "bow");
  ticoEthaxium.addMaterialTrait("alien_armor", "core");
  ticoEthaxium.addMaterialTrait("prideful_armor", "core");
  ticoEthaxium.addMaterialTrait("dense_armor", "core");
  ticoEthaxium.addMaterialTrait("alien_armor", "plates");
  ticoEthaxium.addMaterialTrait("prideful_armor", "plates");
  ticoEthaxium.addMaterialTrait("dense_armor", "plates");
  ticoEthaxium.addMaterialTrait("alien_armor", "trim");
  ticoEthaxium.addMaterialTrait("prideful_armor", "trim");
  ticoEthaxium.addMaterialTrait("dense_armor", "trim");
ticoEthaxium.register();

val ticoTungsten = ExtendedMaterialBuilder.create("tungsten");
  ticoTungsten.setColor(0x5C5C5C);
  ticoTungsten.setCraftable(false);
  ticoTungsten.setLiquid(<liquid:tungsten>);
  ticoTungsten.setCastable(true);
  ticoTungsten.addItem(<item:immersiveintelligence:material_ingot:3>);
  ticoTungsten.addItem(<item:immersiveintelligence:storage:2>, 1, 1296);
  ticoTungsten.setRepresentativeItem(<item:immersiveintelligence:material_ingot:3>);
  ticoTungsten.setItemLocalizer(function(thisMaterial, itemName){return "Tungsten " + itemName;});
  ticoTungsten.setLocalizedName("Tungsten");
  ticoTungsten.addHeadMaterialStats(700, 9, 4.75, 2);
  ticoTungsten.addHandleMaterialStats(1.4, 0);
  ticoTungsten.addExtraMaterialStats(400);
  ticoTungsten.addBowMaterialStats(0.2, 0.4, -1);
  ticoTungsten.addProjectileMaterialStats();
  ticoTungsten.addCoreMaterialStats(32, 21.38);
  ticoTungsten.addPlatesMaterialStats(29.65, 44.8, 0);
  ticoTungsten.addTrimMaterialStats(44.8);
  ticoTungsten.addMaterialTrait("knockback", "head");
  ticoTungsten.addMaterialTrait("knockback", "handle");
  ticoTungsten.addMaterialTrait("knockback", "extra");
  ticoTungsten.addMaterialTrait("knockback", "bow");
  ticoTungsten.addMaterialTrait("dense", "head");
  ticoTungsten.addMaterialTrait("dense", "handle");
  ticoTungsten.addMaterialTrait("dense", "extra");
  ticoTungsten.addMaterialTrait("dense", "bow");
  ticoTungsten.addMaterialTrait("duritos", "head");
  ticoTungsten.addMaterialTrait("duritos", "handle");
  ticoTungsten.addMaterialTrait("duritos", "extra");
  ticoTungsten.addMaterialTrait("duritos", "bow");
  ticoTungsten.addMaterialTrait("heavy_armor", "core");
  ticoTungsten.addMaterialTrait("heavy_armor", "plates");
  ticoTungsten.addMaterialTrait("heavy_armor", "trim");
  ticoTungsten.addMaterialTrait("dense_armor", "core");
  ticoTungsten.addMaterialTrait("dense_armor", "plates");
  ticoTungsten.addMaterialTrait("dense_armor", "trim");
  ticoTungsten.addMaterialTrait("duritos_ranch_armor", "core");
  ticoTungsten.addMaterialTrait("duritos_ranch_armor", "plates");
  ticoTungsten.addMaterialTrait("duritos_ranch_armor", "trim");
ticoTungsten.register();

val ticoLumium = ExtendedMaterialBuilder.create("lumium");
  ticoLumium.setColor(0xFFFF7F);
  ticoLumium.setCraftable(false);
  ticoLumium.setLiquid(<liquid:lumium>);
  ticoLumium.setCastable(true);
  ticoLumium.addItem(<item:contenttweaker:ingot_lumium>);
  ticoLumium.addItem(<item:contenttweaker:sub_block_holder_0:2>, 1, 1296);
  ticoLumium.setRepresentativeItem(<item:contenttweaker:ingot_lumium>);
  ticoLumium.setItemLocalizer(function(thisMaterial, itemName){return "Lumium " + itemName;});
  ticoLumium.setLocalizedName("Lumium");
  ticoLumium.addHeadMaterialStats(830, 7, 6.5, 4);
  ticoLumium.addHandleMaterialStats(1.1, 40);
  ticoLumium.addExtraMaterialStats(60);
  ticoLumium.addBowMaterialStats(0.67, 1.8, 4);
  ticoLumium.addProjectileMaterialStats();
  ticoLumium.addCoreMaterialStats(39, 29.25);
  ticoLumium.addPlatesMaterialStats(23.29, 6.72, 0);
  ticoLumium.addTrimMaterialStats(6.72);
  ticoLumium.addMaterialTrait("illuminati", "head");
  ticoLumium.addMaterialTrait("illuminati", "handle");
  ticoLumium.addMaterialTrait("illuminati", "extra");
  ticoLumium.addMaterialTrait("illuminati", "bow");
  ticoLumium.addMaterialTrait("glowing", "head");
  ticoLumium.addMaterialTrait("glowing", "handle");
  ticoLumium.addMaterialTrait("glowing", "extra");
  ticoLumium.addMaterialTrait("glowing", "bow");
  ticoLumium.addMaterialTrait("lightweight_armor", "core");
  ticoLumium.addMaterialTrait("lightweight_armor", "plates");
  ticoLumium.addMaterialTrait("lightweight_armor", "trim");
  ticoLumium.addMaterialTrait("glowing_armor", "core");
  ticoLumium.addMaterialTrait("glowing_armor", "plates");
  ticoLumium.addMaterialTrait("glowing_armor", "trim");
ticoLumium.register();

val ticoSignalum = ExtendedMaterialBuilder.create("signalum");
  ticoSignalum.setColor(0xD84100);
  ticoSignalum.setCraftable(false);
  ticoSignalum.setLiquid(<liquid:signalum>);
  ticoSignalum.setCastable(true);
  ticoSignalum.addItem(ingotSignalum);
  ticoSignalum.addItem(<item:contenttweaker:sub_block_holder_0:3>, 1, 1296);
  ticoSignalum.setRepresentativeItem(ingotSignalum);
  ticoSignalum.setItemLocalizer(function(thisMaterial, itemName){return "Signalum " + itemName;});
  ticoSignalum.setLocalizedName("Signalum");
  ticoSignalum.addHeadMaterialStats(690, 7.5, 5.2, 3);
  ticoSignalum.addHandleMaterialStats(1.2, 0);
  ticoSignalum.addExtraMaterialStats(55);
  ticoSignalum.addBowMaterialStats(0.83, 1.6, 4.4);
  ticoSignalum.addProjectileMaterialStats();
  ticoSignalum.addCoreMaterialStats(32, 23.4);
  ticoSignalum.addPlatesMaterialStats(25.41, 6.16, 0);
  ticoSignalum.addTrimMaterialStats(6.16);
  ticoSignalum.addMaterialTrait("bloodymary", "head");
  ticoSignalum.addMaterialTrait("bloodymary", "handle");
  ticoSignalum.addMaterialTrait("bloodymary", "extra");
  ticoSignalum.addMaterialTrait("bloodymary", "bow");
  ticoSignalum.addMaterialTrait("tom_and_jerry_armor", "core");
  ticoSignalum.addMaterialTrait("tom_and_jerry_armor", "plates");
  ticoSignalum.addMaterialTrait("tom_and_jerry_armor", "trim");
ticoSignalum.register();

val ticoPlatinum = ExtendedMaterialBuilder.create("platinum");
  ticoPlatinum.setColor(0xB7E7FF);
  ticoPlatinum.setCraftable(false);
  ticoPlatinum.setLiquid(<liquid:platinum>);
  ticoPlatinum.setCastable(true);
  ticoPlatinum.addItem(<item:immersiveintelligence:material_ingot:2>);
  ticoPlatinum.addItem(<item:immersiveintelligence:storage>, 1, 1296);
  ticoPlatinum.setRepresentativeItem(<item:immersiveintelligence:material_ingot:2>);
  ticoPlatinum.setItemLocalizer(function(thisMaterial, itemName){return "Platinum " + itemName;});
  ticoPlatinum.setLocalizedName("Platinum");
  ticoPlatinum.addHeadMaterialStats(720, 8, 6, 4);
  ticoPlatinum.addHandleMaterialStats(1.05, -5);
  ticoPlatinum.addExtraMaterialStats(60);
  ticoPlatinum.addBowMaterialStats(1.18, 1.8, 8);
  ticoPlatinum.addProjectileMaterialStats();
  ticoPlatinum.addCoreMaterialStats(33, 27);
  ticoPlatinum.addPlatesMaterialStats(22.24, 6.72, 0);
  ticoPlatinum.addTrimMaterialStats(6.72);
  ticoPlatinum.addMaterialTrait("global", "head");
  ticoPlatinum.addMaterialTrait("knockback", "handle");
  ticoPlatinum.addMaterialTrait("knockback", "extra");
  ticoPlatinum.addMaterialTrait("knockback", "bow");
  ticoPlatinum.addMaterialTrait("duritos", "handle");
  ticoPlatinum.addMaterialTrait("duritos", "extra");
  ticoPlatinum.addMaterialTrait("duritos", "bow");
  ticoPlatinum.addMaterialTrait("dense", "handle");
  ticoPlatinum.addMaterialTrait("dense", "extra");
  ticoPlatinum.addMaterialTrait("dense", "bow");
  ticoPlatinum.addMaterialTrait("heavy_armor", "core");
  ticoPlatinum.addMaterialTrait("heavy_armor", "plates");
  ticoPlatinum.addMaterialTrait("heavy_armor", "trim");
  ticoPlatinum.addMaterialTrait("dense_armor", "core");
  ticoPlatinum.addMaterialTrait("dense_armor", "plates");
  ticoPlatinum.addMaterialTrait("dense_armor", "trim");
  ticoPlatinum.addMaterialTrait("duritos_ranch_armor", "core");
  ticoPlatinum.addMaterialTrait("duritos_ranch_armor", "plates");
  ticoPlatinum.addMaterialTrait("duritos_ranch_armor", "trim");
ticoPlatinum.register();

val ticoEnderium = ExtendedMaterialBuilder.create("enderium");
  ticoEnderium.setColor(0x007068);
  ticoEnderium.setCraftable(false);
  ticoEnderium.setLiquid(<liquid:enderium>);
  ticoEnderium.setCastable(true);
  ticoEnderium.addItem(ingotEnderium);
  ticoEnderium.addItem(<item:contenttweaker:sub_block_holder_0>, 1, 1296);
  ticoEnderium.setRepresentativeItem(ingotEnderium);
  ticoEnderium.setItemLocalizer(function(thisMaterial, itemName){return "Enderium " + itemName;});
  ticoEnderium.setLocalizedName("Enderium");
  ticoEnderium.addHeadMaterialStats(800, 7.5, 7, 4);
  ticoEnderium.addHandleMaterialStats(1.05, -5);
  ticoEnderium.addExtraMaterialStats(65);
  ticoEnderium.addBowMaterialStats(0.9, 1.9, 9);	//1.11
  ticoEnderium.addArrowShaftMaterialStats(1, 12);
  ticoEnderium.addProjectileMaterialStats();
  ticoEnderium.addCoreMaterialStats(37, 31.5);
  ticoEnderium.addPlatesMaterialStats(22.24, 7.28, 0);
  ticoEnderium.addTrimMaterialStats(7.28);
  ticoEnderium.addMaterialTrait("portly", "head");
  ticoEnderium.addMaterialTrait("endspeed", "projectile");
  ticoEnderium.addMaterialTrait("endspeed", "shaft");
  ticoEnderium.addMaterialTrait("global", "handle");
  ticoEnderium.addMaterialTrait("global", "extra");
  ticoEnderium.addMaterialTrait("global", "bow");
  ticoEnderium.addMaterialTrait("enderference", "handle");
  ticoEnderium.addMaterialTrait("enderference", "extra");
  ticoEnderium.addMaterialTrait("enderference", "bow");
  ticoEnderium.addMaterialTrait("enderport_armor", "core");
  ticoEnderium.addMaterialTrait("enderport_armor", "plates");
  ticoEnderium.addMaterialTrait("enderport_armor", "trim");
ticoEnderium.register();

val ticoAdvancedElectronicAlloy = ExtendedMaterialBuilder.create("AdvancedElectronicAlloy");
  ticoAdvancedElectronicAlloy.setColor(0x919191);
  ticoAdvancedElectronicAlloy.setCraftable(false);
  ticoAdvancedElectronicAlloy.setLiquid(<liquid:electric_alloy>);
  ticoAdvancedElectronicAlloy.setCastable(true);
  ticoAdvancedElectronicAlloy.addItem(<item:immersiveintelligence:material_ingot>);
  ticoAdvancedElectronicAlloy.addItem(<item:contenttweaker:sub_block_holder_0:4>, 1, 1296);
  ticoAdvancedElectronicAlloy.setRepresentativeItem(<item:immersiveintelligence:material_ingot>);
  ticoAdvancedElectronicAlloy.setItemLocalizer(function(thisMaterial, itemName){return "Electrical " + itemName;});
  ticoAdvancedElectronicAlloy.setLocalizedName("Electronic Alloy");
  ticoAdvancedElectronicAlloy.addHeadMaterialStats(953, 10.06, 7.74, 4);
  ticoAdvancedElectronicAlloy.addHandleMaterialStats(1.3, 80);
  ticoAdvancedElectronicAlloy.addExtraMaterialStats(75);
  ticoAdvancedElectronicAlloy.addBowMaterialStats(1, 0.94, 8.5);
  ticoAdvancedElectronicAlloy.addProjectileMaterialStats();
  ticoAdvancedElectronicAlloy.addCoreMaterialStats(44.5, 30.6);
  ticoAdvancedElectronicAlloy.addPlatesMaterialStats(27.53, 32.2, 0);
  ticoAdvancedElectronicAlloy.addTrimMaterialStats(32.2);
  ticoAdvancedElectronicAlloy.addMaterialTrait("shocking", "head");
  ticoAdvancedElectronicAlloy.addMaterialTrait("voltaic_armor", "core");
  ticoAdvancedElectronicAlloy.addMaterialTrait("lightweight_armor", "trim");
  ticoAdvancedElectronicAlloy.addMaterialTrait("lightweight_armor", "plates");
  ticoAdvancedElectronicAlloy.addMaterialTrait("lightweight");
ticoAdvancedElectronicAlloy.register();

val ticoTin = ExtendedMaterialBuilder.create("Tin");
  ticoTin.setColor(0xa6b0bd);
  ticoTin.setCraftable(false);
  ticoTin.setLiquid(<liquid:tin>);
  ticoTin.setCastable(true);
  ticoTin.addItem(<item:embers:ingot_tin>);
  ticoTin.addItem(<item:embers:block_tin>, 1, 1296);
  ticoTin.setRepresentativeItem(<item:embers:ingot_tin>);
  ticoTin.setItemLocalizer(function(thisMaterial, itemName){return "Tin " + itemName;});
  ticoTin.setLocalizedName("Tin");
  ticoTin.addHeadMaterialStats(300, 1.85, 2.27, 1);
  ticoTin.addHandleMaterialStats(1.34, 40);
  ticoTin.addExtraMaterialStats(40);
  ticoTin.addBowMaterialStats(2.56, 0.87, 1);
  ticoTin.addProjectileMaterialStats();
  ticoTin.addCoreMaterialStats(14, 10.22);
  ticoTin.addPlatesMaterialStats(28.38, 4.48, 0);
  ticoTin.addTrimMaterialStats(4.48);
  ticoTin.addMaterialTrait("terrafirma1");
ticoTin.register();

val ticoBrass = ExtendedMaterialBuilder.create("Brass");
  ticoBrass.setColor(0xcbc377);
  ticoBrass.setCraftable(false);
  ticoBrass.setLiquid(<liquid:brass>);
  ticoBrass.setCastable(true);
  ticoBrass.addItem(<item:immersiveintelligence:material_ingot:1>);
  ticoBrass.addItem(<item:thaumcraft:ingot:2>);
  ticoBrass.addItem(<item:immersiveintelligence:storage:3>, 1, 1296);
  ticoBrass.addItem(<item:thaumcraft:metal_brass>, 1, 1296);
  ticoBrass.setRepresentativeItem(<item:immersiveintelligence:material_ingot:1>);
  ticoBrass.setItemLocalizer(function(thisMaterial, itemName){return "Brass " + itemName;});
  ticoBrass.setLocalizedName("Brass");
  ticoBrass.addHeadMaterialStats(260, 2.98, 1.76, 1);
  ticoBrass.addHandleMaterialStats(1.11, 10);
  ticoBrass.addExtraMaterialStats(4);
  ticoBrass.addBowMaterialStats(1.32, 1.63, 3);
  ticoBrass.addProjectileMaterialStats();
  ticoBrass.addCoreMaterialStats(12, 7.92);
  ticoBrass.addPlatesMaterialStats(23.51, 0.45, 0);
  ticoBrass.addTrimMaterialStats(0.45);
  ticoBrass.addMaterialTrait("invigorating_armor", "core");
  ticoBrass.addMaterialTrait("invigorating_armor", "trim");
  ticoBrass.addMaterialTrait("invigorating_armor", "plates");
  ticoBrass.addMaterialTrait("alchemical");
ticoBrass.register();

val ticoAluminum = ExtendedMaterialBuilder.create("Aluminum");
  ticoAluminum.setColor(0xcdc0b7);
  ticoAluminum.setCraftable(false);
  ticoAluminum.setLiquid(<liquid:aluminum>);
  ticoAluminum.setCastable(true);
  ticoAluminum.addItem(<item:embers:ingot_aluminum>);
  ticoAluminum.addItem(<item:immersiveengineering:metal:1>);
  ticoAluminum.addItem(<item:embers:block_aluminum>, 1, 1296);
  ticoAluminum.addItem(<item:immersiveengineering:storage:1>, 1, 1296);
  ticoAluminum.setRepresentativeItem(<item:embers:ingot_aluminum>);
  ticoAluminum.setItemLocalizer(function(thisMaterial, itemName){return "Aluminum " + itemName;});
  ticoAluminum.setLocalizedName("Aluminum");
  ticoAluminum.addHeadMaterialStats(80, 1.23, 0.85, 1);
  ticoAluminum.addHandleMaterialStats(0.21, -20);
  ticoAluminum.addExtraMaterialStats(-10);
  ticoAluminum.addBowMaterialStats(0.21, 0.34, 0.6);
  ticoAluminum.addProjectileMaterialStats();
  ticoAluminum.addCoreMaterialStats(3, 3.83);
  ticoAluminum.addPlatesMaterialStats(4.45, -1.12, 0);
  ticoAluminum.addTrimMaterialStats(-1.12);
  ticoAluminum.addMaterialTrait("lightweight");
  ticoAluminum.addMaterialTrait("lightweight_armor", "core");
  ticoAluminum.addMaterialTrait("lightweight_armor", "trim");
  ticoAluminum.addMaterialTrait("lightweight_armor", "plates");
ticoAluminum.register();

val ticoZinc = ExtendedMaterialBuilder.create("Zinc");
  ticoZinc.setColor(0xb5cdc7);
  ticoZinc.setCraftable(false);
  ticoZinc.setLiquid(<liquid:zinc>);
  ticoZinc.setCastable(true);
  ticoZinc.addItem(<item:immersiveintelligence:material_ingot:4>);
  ticoZinc.addItem(<item:immersiveintelligence:storage:1>, 1, 1296);
  ticoZinc.setRepresentativeItem(<item:immersiveintelligence:material_ingot:4>);
  ticoZinc.setItemLocalizer(function(thisMaterial, itemName){return "Zinc " + itemName;});
  ticoZinc.setLocalizedName("Zinc");
  ticoZinc.addHeadMaterialStats(40, 1.76, 0.53, 1);
  ticoZinc.addHandleMaterialStats(0.19, -25);
  ticoZinc.addExtraMaterialStats(-12);
  ticoZinc.addBowMaterialStats(0.32, 0.43, 0.4);
  ticoZinc.addProjectileMaterialStats();
  ticoZinc.addCoreMaterialStats(1, 2.38);
  ticoZinc.addPlatesMaterialStats(4.02, -1.34, 0);
  ticoZinc.addTrimMaterialStats(-1.34);
  ticoZinc.addMaterialTrait("crumbling");
  ticoZinc.addMaterialTrait("shielding_armor", "plates");
  ticoZinc.addMaterialTrait("shielding_armor", "trim");
  ticoZinc.addMaterialTrait("shielding_armor", "core");
ticoZinc.register();

val ticoRefinedObsidian = ExtendedMaterialBuilder.create("RefinedObsidian");
  ticoRefinedObsidian.setColor(0x5e4e77);
  ticoRefinedObsidian.setCraftable(false);
  ticoRefinedObsidian.setLiquid(<liquid:refined_obsidian>);
  ticoRefinedObsidian.setCastable(true);
  ticoRefinedObsidian.addItem(ingotRefined);
  ticoRefinedObsidian.addItem(<item:contenttweaker:sub_block_holder_0:1>, 1, 1296);
  ticoRefinedObsidian.setRepresentativeItem(ingotRefined);
  ticoRefinedObsidian.setItemLocalizer(function(thisMaterial, itemName){return "Refined Obsidian " + itemName;});
  ticoRefinedObsidian.setLocalizedName("Refined Obsidian");
  ticoRefinedObsidian.addHeadMaterialStats(2500, 7, 11, 4);
  ticoRefinedObsidian.addHandleMaterialStats(2.19, 400);
  ticoRefinedObsidian.addExtraMaterialStats(340);
  ticoRefinedObsidian.addBowMaterialStats(0.11, 0.43, 12);
  ticoRefinedObsidian.addProjectileMaterialStats();
  ticoRefinedObsidian.addCoreMaterialStats(65, 49.68);
  ticoRefinedObsidian.addPlatesMaterialStats(46.38, 38.08, 1);
  ticoRefinedObsidian.addTrimMaterialStats(38.08);
  ticoRefinedObsidian.addMaterialTrait("duritos", "head");
  ticoRefinedObsidian.addMaterialTrait("duritos", "handle");
  ticoRefinedObsidian.addMaterialTrait("duritos", "extra");
  ticoRefinedObsidian.addMaterialTrait("duritos", "bow");
  ticoRefinedObsidian.addMaterialTrait("dense", "head");
  ticoRefinedObsidian.addMaterialTrait("dense", "handle");
  ticoRefinedObsidian.addMaterialTrait("dense", "extra");
  ticoRefinedObsidian.addMaterialTrait("dense", "bow");
  ticoRefinedObsidian.addMaterialTrait("dense_armor", "core");
  ticoRefinedObsidian.addMaterialTrait("dense_armor", "plates");
  ticoRefinedObsidian.addMaterialTrait("dense_armor", "trim");
  ticoRefinedObsidian.addMaterialTrait("duritos_ranch_armor", "core");
  ticoRefinedObsidian.addMaterialTrait("duritos_ranch_armor", "plates");
  ticoRefinedObsidian.addMaterialTrait("duritos_ranch_armor", "trim");
ticoRefinedObsidian.register();

val ticoGaia = ExtendedMaterialBuilder.create("Gaia");
  ticoGaia.setColor(0xe5baf8);
  ticoGaia.setCraftable(true);
  ticoGaia.setCastable(false);
  ticoGaia.addItem(<item:botania:manaresource:14>);
  ticoGaia.setRepresentativeItem(<item:botania:manaresource:14>);
  ticoGaia.setItemLocalizer(function(thisMaterial, itemName){return "Gaia " + itemName;});
  ticoGaia.setLocalizedName("Gaia");
  ticoGaia.addHeadMaterialStats(1600, 14.52, 19.62, 4);
  ticoGaia.addHandleMaterialStats(1.63, 260);
  ticoGaia.addExtraMaterialStats(180);
  ticoGaia.addBowMaterialStats(1.54, 6.45, 15);
  ticoGaia.addProjectileMaterialStats();
  ticoGaia.addCoreMaterialStats(75, 50);
  ticoGaia.addPlatesMaterialStats(34.52, 20.16, 2);
  ticoGaia.addTrimMaterialStats(20.16);
  ticoGaia.addMaterialTrait("mana", "head");
  ticoGaia.addMaterialTrait("mana", "handle");
  ticoGaia.addMaterialTrait("mana", "extra");
  ticoGaia.addMaterialTrait("mana", "bow");
  ticoGaia.addMaterialTrait("naturesblessing", "head");
  ticoGaia.addMaterialTrait("naturesblessing", "handle");
  ticoGaia.addMaterialTrait("naturesblessing", "extra");
  ticoGaia.addMaterialTrait("naturesblessing", "bow");
  ticoGaia.addMaterialTrait("natureswrath", "head");
  ticoGaia.addMaterialTrait("natureswrath", "handle");
  ticoGaia.addMaterialTrait("natureswrath", "extra");
  ticoGaia.addMaterialTrait("natureswrath", "bow");
  ticoGaia.addMaterialTrait("naturespower", "head");
  ticoGaia.addMaterialTrait("naturespower", "handle");
  ticoGaia.addMaterialTrait("naturespower", "extra");
  ticoGaia.addMaterialTrait("naturespower", "bow");
  ticoGaia.addMaterialTrait("terrafirma2", "head");
  ticoGaia.addMaterialTrait("terrafirma1", "handle");
  ticoGaia.addMaterialTrait("terrafirma1", "extra");
  ticoGaia.addMaterialTrait("terrafirma1", "bow");
  ticoGaia.addMaterialTrait("mana", "core");
  ticoGaia.addMaterialTrait("mana", "trim");
  ticoGaia.addMaterialTrait("mana", "plates");
  ticoGaia.addMaterialTrait("invigorating_armor", "core");
  ticoGaia.addMaterialTrait("invigorating_armor", "trim");
  ticoGaia.addMaterialTrait("invigorating_armor", "plates");
ticoGaia.register();

val ticoRubber = ExtendedMaterialBuilder.create("Rubber");
  ticoRubber.setColor(0x4f4444);
  ticoRubber.setCraftable(true);
  ticoRubber.setCastable(false);
  ticoRubber.addItem(<item:immersiveintelligence:material:29>);
  ticoRubber.setRepresentativeItem(<item:immersiveintelligence:material:29>);
  ticoRubber.setItemLocalizer(function(thisMaterial, itemName){return "Rubber " + itemName;});
  ticoRubber.setLocalizedName("Rubber");
  ticoRubber.addHeadMaterialStats(14, 0.95, 0.12, 1);
  ticoRubber.addHandleMaterialStats(0.87, 10);
  ticoRubber.addExtraMaterialStats(3);
  ticoRubber.addBowMaterialStats(6.25, 1.42, 0.3);
  ticoRubber.addBowStringMaterialStats(2.65);
  ticoRubber.addFletchingMaterialStats(0.8, 1.25);
  ticoRubber.addProjectileMaterialStats();
  ticoRubber.addCoreMaterialStats(1, 0.54);
  ticoRubber.addPlatesMaterialStats(18.42, 0.34, 0);
  ticoRubber.addTrimMaterialStats(0.34);
  ticoRubber.addMaterialTrait("bouncy_armor", "core");
  ticoRubber.addMaterialTrait("bouncy_armor", "plates");
  ticoRubber.addMaterialTrait("bouncy_armor", "trim");
  ticoRubber.addMaterialTrait("knockback");
ticoRubber.register();

val ticoAquaticDragon = ExtendedMaterialBuilder.create("AquaticDragon");
  ticoAquaticDragon.setColor(0x00dbdb);
  ticoAquaticDragon.setCraftable(true);
  ticoAquaticDragon.setCastable(false);
  ticoAquaticDragon.addItem(<item:forbidden_arcanus:aquatic_dragon_scale>);
  ticoAquaticDragon.setRepresentativeItem(<item:forbidden_arcanus:aquatic_dragon_scale>);
  ticoAquaticDragon.setItemLocalizer(function(thisMaterial, itemName){return "Aquatic Dragon Scale " + itemName;});
  ticoAquaticDragon.setLocalizedName("Aquatic Dragon Scale");
  ticoAquaticDragon.addHeadMaterialStats(1200, 10, 7, 4);
  ticoAquaticDragon.addHandleMaterialStats(1.5, 100);
  ticoAquaticDragon.addExtraMaterialStats(200);
  ticoAquaticDragon.addBowMaterialStats(0.85, 1.2, 5.5);
  ticoAquaticDragon.addProjectileMaterialStats();
  ticoAquaticDragon.addCoreMaterialStats(56, 31.5);
  ticoAquaticDragon.addPlatesMaterialStats(31.67, 22.4, 0);
  ticoAquaticDragon.addTrimMaterialStats(22.4);
  ticoAquaticDragon.addMaterialTrait("aquadynamic", "head");
  ticoAquaticDragon.addMaterialTrait("aquadynamic", "handle");
  ticoAquaticDragon.addMaterialTrait("aquadynamic", "extra");
  ticoAquaticDragon.addMaterialTrait("aquadynamic", "bow");
  ticoAquaticDragon.addMaterialTrait("aquaspeed_armor", "core");
  ticoAquaticDragon.addMaterialTrait("aquaspeed_armor", "trim");
  ticoAquaticDragon.addMaterialTrait("aquaspeed_armor", "plates");
  ticoAquaticDragon.addMaterialTrait("freezing", "head");
  ticoAquaticDragon.addMaterialTrait("freezing", "handle");
  ticoAquaticDragon.addMaterialTrait("freezing", "extra");
  ticoAquaticDragon.addMaterialTrait("freezing", "bow");
  ticoAquaticDragon.addMaterialTrait("absorbent_armor", "core");
  ticoAquaticDragon.addMaterialTrait("absorbent_armor", "trim");
  ticoAquaticDragon.addMaterialTrait("absorbent_armor", "plates");
  ticoAquaticDragon.addMaterialTrait("alien", "head");
  ticoAquaticDragon.addMaterialTrait("alien", "handle");
  ticoAquaticDragon.addMaterialTrait("alien", "extra");
  ticoAquaticDragon.addMaterialTrait("alien", "bow");
  ticoAquaticDragon.addMaterialTrait("alien_armor", "core");
  ticoAquaticDragon.addMaterialTrait("alien_armor", "trim");
  ticoAquaticDragon.addMaterialTrait("alien_armor", "plates");
ticoAquaticDragon.register();

val ticoNetherStar = ExtendedMaterialBuilder.create("NetherStar");
  ticoNetherStar.setColor(0xdbdbdb);
  ticoNetherStar.setCraftable(true);
  ticoNetherStar.setCastable(false);
  ticoNetherStar.addItem(<item:minecraft:nether_star>);
  ticoNetherStar.setRepresentativeItem(<item:minecraft:nether_star>);
  ticoNetherStar.setItemLocalizer(function(thisMaterial, itemName){return "Nether Star " + itemName;});
  ticoNetherStar.setLocalizedName("Nether Star");
  ticoNetherStar.addHeadMaterialStats(1200, 10, 7, 4);
  ticoNetherStar.addHandleMaterialStats(1.5, 100);
  ticoNetherStar.addExtraMaterialStats(200);
  ticoNetherStar.addBowMaterialStats(0.85, 1.2, 5.5);
  ticoNetherStar.addProjectileMaterialStats();
  ticoNetherStar.addCoreMaterialStats(56, 31.5);
  ticoNetherStar.addPlatesMaterialStats(31.67, 22.4, 0);
  ticoNetherStar.addTrimMaterialStats(22.4);
  ticoNetherStar.addMaterialTrait("hellish", "head");
  ticoNetherStar.addMaterialTrait("hellish", "handle");
  ticoNetherStar.addMaterialTrait("hellish", "extra");
  ticoNetherStar.addMaterialTrait("hellish", "bow");
  ticoNetherStar.addMaterialTrait("infernal_armor", "core");
  ticoNetherStar.addMaterialTrait("infernal_armor", "trim");
  ticoNetherStar.addMaterialTrait("infernal_armor", "plates");
  /*
    dunno why but these dont work. might have something to do with them being single-use
    ticoNetherStar.addMaterialTrait("soulbound", "head");
    ticoNetherStar.addMaterialTrait("soulbound", "handle");
    ticoNetherStar.addMaterialTrait("soulbound", "extra");
    ticoNetherStar.addMaterialTrait("soulbound", "bow");
    ticoNetherStar.addMaterialTrait("soulbound_armor", "core");
    ticoNetherStar.addMaterialTrait("soulbound_armor", "trim");
    ticoNetherStar.addMaterialTrait("soulbound_armor", "plates");
  */
  ticoNetherStar.addMaterialTrait("explosive", "head");
  ticoNetherStar.addMaterialTrait("explosive", "handle");
  ticoNetherStar.addMaterialTrait("explosive", "extra");
  ticoNetherStar.addMaterialTrait("explosive", "bow");
  ticoNetherStar.addMaterialTrait("shielding_armor", "core");
  ticoNetherStar.addMaterialTrait("shielding_armor", "trim");
  ticoNetherStar.addMaterialTrait("shielding_armor", "plates");
  ticoNetherStar.addMaterialTrait("alien", "head");
  ticoNetherStar.addMaterialTrait("alien", "handle");
  ticoNetherStar.addMaterialTrait("alien", "extra");
  ticoNetherStar.addMaterialTrait("alien", "bow");
  ticoNetherStar.addMaterialTrait("alien_armor", "core");
  ticoNetherStar.addMaterialTrait("alien_armor", "trim");
  ticoNetherStar.addMaterialTrait("alien_armor", "plates");
ticoNetherStar.register();

val ticoDragonScale = ExtendedMaterialBuilder.create("DragonScale");
  ticoDragonScale.setColor(0x200722);
  ticoDragonScale.setCraftable(true);
  ticoDragonScale.setCastable(false);
  ticoDragonScale.addItem(<item:forbidden_arcanus:dragon_scale>);
  ticoDragonScale.setRepresentativeItem(<item:forbidden_arcanus:dragon_scale>);
  ticoDragonScale.setItemLocalizer(function(thisMaterial, itemName){return "Dragon Scale " + itemName;});
  ticoDragonScale.setLocalizedName("Dragon Scale");
  ticoDragonScale.addHeadMaterialStats(1200, 10, 7, 4);
  ticoDragonScale.addHandleMaterialStats(1.5, 100);
  ticoDragonScale.addExtraMaterialStats(200);
  ticoDragonScale.addBowMaterialStats(0.85, 1.2, 5.5);
  ticoDragonScale.addProjectileMaterialStats();
  ticoDragonScale.addCoreMaterialStats(56, 31.5);
  ticoDragonScale.addPlatesMaterialStats(31.67, 22.4, 0);
  ticoDragonScale.addTrimMaterialStats(22.4);
  ticoDragonScale.addMaterialTrait("established", "head");
  ticoDragonScale.addMaterialTrait("established", "handle");
  ticoDragonScale.addMaterialTrait("established", "extra");
  ticoDragonScale.addMaterialTrait("established", "bow");
  ticoDragonScale.addMaterialTrait("ambitious_armor", "core");
  ticoDragonScale.addMaterialTrait("ambitious_armor", "trim");
  ticoDragonScale.addMaterialTrait("ambitious_armor", "plates");
  ticoDragonScale.addMaterialTrait("enderference", "head");
  ticoDragonScale.addMaterialTrait("enderference", "handle");
  ticoDragonScale.addMaterialTrait("enderference", "extra");
  ticoDragonScale.addMaterialTrait("enderference", "bow");
  ticoDragonScale.addMaterialTrait("enderference", "core");
  ticoDragonScale.addMaterialTrait("enderference", "trim");
  ticoDragonScale.addMaterialTrait("enderference", "plates");
  ticoDragonScale.addMaterialTrait("alien", "head");
  ticoDragonScale.addMaterialTrait("alien", "handle");
  ticoDragonScale.addMaterialTrait("alien", "extra");
  ticoDragonScale.addMaterialTrait("alien", "bow");
  ticoDragonScale.addMaterialTrait("alien_armor", "core");
  ticoDragonScale.addMaterialTrait("alien_armor", "trim");
  ticoDragonScale.addMaterialTrait("alien_armor", "plates");
ticoDragonScale.register();

val ticoSmokeyQuartz = ExtendedMaterialBuilder.create("SmokeyQuartz");
  ticoSmokeyQuartz.setColor(0x252422);
  ticoSmokeyQuartz.setCraftable(true);
  ticoSmokeyQuartz.setCastable(false);
  ticoSmokeyQuartz.addItem(<item:botania:quartz>);
  ticoSmokeyQuartz.addItem(<item:botania:quartztypedark>, 1, 576);
  ticoSmokeyQuartz.setRepresentativeItem(<item:botania:quartz>);
  ticoSmokeyQuartz.setItemLocalizer(function(thisMaterial, itemName){return "Smokey Quartz " + itemName;});
  ticoSmokeyQuartz.setLocalizedName("Smokey Quartz");
  ticoSmokeyQuartz.addHeadMaterialStats(380, 6, 4.5, 3);
  ticoSmokeyQuartz.addHandleMaterialStats(0.8, 0);
  ticoSmokeyQuartz.addExtraMaterialStats(50);
  ticoSmokeyQuartz.addBowMaterialStats(0.2, 0.4, -1);
  ticoSmokeyQuartz.addProjectileMaterialStats();
  ticoSmokeyQuartz.addCoreMaterialStats(17, 20.25);
  ticoSmokeyQuartz.addPlatesMaterialStats(16.94, 5.6, 0);
  ticoSmokeyQuartz.addTrimMaterialStats(5.6);
  ticoSmokeyQuartz.addMaterialTrait("devilsstrength", "head");
  ticoSmokeyQuartz.addMaterialTrait("devilsstrength", "handle");
  ticoSmokeyQuartz.addMaterialTrait("devilsstrength", "extra");
  ticoSmokeyQuartz.addMaterialTrait("devilsstrength", "bow");
  ticoSmokeyQuartz.addMaterialTrait("crude2", "head");
  ticoSmokeyQuartz.addMaterialTrait("crude2", "handle");
  ticoSmokeyQuartz.addMaterialTrait("crude2", "extra");
  ticoSmokeyQuartz.addMaterialTrait("crude2", "bow");
  ticoSmokeyQuartz.addMaterialTrait("mundane2_armor", "core");
  ticoSmokeyQuartz.addMaterialTrait("mundane1_armor", "trim");
  ticoSmokeyQuartz.addMaterialTrait("mundane1_armor", "plates");
ticoSmokeyQuartz.register();

val ticoWitherBone = ExtendedMaterialBuilder.create("WitherBone");
  ticoWitherBone.setColor(0x1f1f1f);
  ticoWitherBone.setCraftable(true);
  ticoWitherBone.setCastable(false);
  ticoWitherBone.addItem(<item:tconstruct:materials:17>);
  ticoWitherBone.addItem(<item:inspirations:materials:7>);
  ticoWitherBone.addItem(<item:soulus:bone_nether>);
  ticoWitherBone.setRepresentativeItem(<item:tconstruct:materials:17>);
  ticoWitherBone.setItemLocalizer(function(thisMaterial, itemName){return "Wither Bone " + itemName;});
  ticoWitherBone.setLocalizedName("Wither Bone");
  ticoWitherBone.addArrowShaftMaterialStats(1, 20);
  ticoWitherBone.addMaterialTrait("apocalypse");
ticoWitherBone.register();

val ticoPsiEbony = ExtendedMaterialBuilder.create("PsiEbony");
  ticoPsiEbony.setColor(0x232315);
  ticoPsiEbony.setCraftable(false);
  ticoPsiEbony.setLiquid(<liquid:ebony_psimetal>);
  ticoPsiEbony.setCastable(true);
  ticoPsiEbony.addItem(<item:psi:material:3>);
  ticoPsiEbony.addItem(<item:psi:psi_decorative:7>, 1, 1296);
  ticoPsiEbony.setRepresentativeItem(<item:psi:material:3>);
  ticoPsiEbony.setItemLocalizer(function(thisMaterial, itemName){return "Ebony Psimetal " + itemName;});
  ticoPsiEbony.setLocalizedName("Ebony Psimetal");
  ticoPsiEbony.addHeadMaterialStats(775, 9, 7, 4);
  ticoPsiEbony.addHandleMaterialStats(1.62, 0);
  ticoPsiEbony.addExtraMaterialStats(37.5);
  ticoPsiEbony.addBowMaterialStats(2, 1.8, 7);
  ticoPsiEbony.addProjectileMaterialStats();
  ticoPsiEbony.addCoreMaterialStats(46.25, 40.05);
  ticoPsiEbony.addPlatesMaterialStats(40.76, 14, 0);
  ticoPsiEbony.addTrimMaterialStats(14);
  ticoPsiEbony.addMaterialTrait("psicological", "head");
  ticoPsiEbony.addMaterialTrait("psicological", "handle");
  ticoPsiEbony.addMaterialTrait("psicological", "extra");
  ticoPsiEbony.addMaterialTrait("psicological", "bow");
  ticoPsiEbony.addMaterialTrait("psicological", "core");
  ticoPsiEbony.addMaterialTrait("psicological", "trim");
  ticoPsiEbony.addMaterialTrait("psicological", "plates");
  ticoPsiEbony.addMaterialTrait("portly", "head");
  ticoPsiEbony.addMaterialTrait("portly", "handle");
  ticoPsiEbony.addMaterialTrait("portly", "extra");
  ticoPsiEbony.addMaterialTrait("portly", "bow");
  ticoPsiEbony.addMaterialTrait("global", "head");
  ticoPsiEbony.addMaterialTrait("global", "handle");
  ticoPsiEbony.addMaterialTrait("global", "extra");
  ticoPsiEbony.addMaterialTrait("global", "bow");
ticoPsiEbony.register();

val ticoPsiIvory = ExtendedMaterialBuilder.create("PsiIvory");
  ticoPsiIvory.setColor(0xd6d4ba);
  ticoPsiIvory.setCraftable(false);
  ticoPsiIvory.setLiquid(<liquid:ivory_psimetal>);
  ticoPsiIvory.setCastable(true);
  ticoPsiIvory.addItem(<item:psi:material:4>);
  ticoPsiIvory.addItem(<item:psi:psi_decorative:8>, 1, 1296);
  ticoPsiIvory.setRepresentativeItem(<item:psi:material:4>);
  ticoPsiIvory.setItemLocalizer(function(thisMaterial, itemName){return "Ivory Psimetal " + itemName;});
  ticoPsiIvory.setLocalizedName("Ivory Psimetal");
  ticoPsiIvory.addHeadMaterialStats(775, 10, 6, 4);
  ticoPsiIvory.addHandleMaterialStats(2.5, 0);
  ticoPsiIvory.addExtraMaterialStats(37.5);
  ticoPsiIvory.addBowMaterialStats(1.66, 1.8, 7);
  ticoPsiIvory.addProjectileMaterialStats();
  ticoPsiIvory.addCoreMaterialStats(46.25, 40.05);
  ticoPsiIvory.addPlatesMaterialStats(40.76, 14, 0);
  ticoPsiIvory.addTrimMaterialStats(14);
  ticoPsiIvory.addMaterialTrait("psicological", "head");
  ticoPsiIvory.addMaterialTrait("psicological", "handle");
  ticoPsiIvory.addMaterialTrait("psicological", "extra");
  ticoPsiIvory.addMaterialTrait("psicological", "bow");
  ticoPsiIvory.addMaterialTrait("psicological", "core");
  ticoPsiIvory.addMaterialTrait("psicological", "trim");
  ticoPsiIvory.addMaterialTrait("psicological", "plates");
  ticoPsiIvory.addMaterialTrait("portly", "head");
  ticoPsiIvory.addMaterialTrait("portly", "handle");
  ticoPsiIvory.addMaterialTrait("portly", "extra");
  ticoPsiIvory.addMaterialTrait("portly", "bow");
  ticoPsiIvory.addMaterialTrait("global", "head");
  ticoPsiIvory.addMaterialTrait("global", "handle");
  ticoPsiIvory.addMaterialTrait("global", "extra");
  ticoPsiIvory.addMaterialTrait("global", "bow");
ticoPsiIvory.register();